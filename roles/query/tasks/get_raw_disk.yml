---

- file: path="{{pre_check_tmp}}/temp43_007.log" state=absent
- file: path="{{pre_check_tmp}}/temp44_008.log" state=absent
- file: path="{{pre_check_tmp}}/temp44_009.log" state=absent

- name: Check bindings
  shell: "cat /etc/multipath/bindings | tr -s '\n' '\n' | grep -v '#' > {{pre_check_tmp}}/temp43_007.log || true" 
 
- name: List the bindings 
  shell: "tail -n 9 {{pre_check_tmp}}/temp43_007.log > {{pre_check_tmp}}/temp44_008.log || true" 
    
- name: Register the bindings    
  shell: "cat {{pre_check_tmp}}/temp44_008.log | awk 'NR=={{item}}{print $1}' || true"
  register: w
  with_items: '{{numbers}}'
      
- name: Save the raw prefix
  set_fact: raw_prefix='mpath'
  when: item.stdout|regex_search('mpath')
  with_items: "{{w.results}}"
  until: raw_prefix=='mpath'
   
- name: Get disk size
  shell: |
         if [[ $(fdisk -l /dev/{{raw_prefix}}{{item}} |  grep '/dev/{{raw_prefix}}{{item}}{{partition}}' | wc -l) = 0 ]]; then fdisk -l /dev/{{raw_prefix}}{{item}} | grep 'Disk /dev' | awk '{print $3}'; fi || true
  register: x
  with_items: "{{letters}}"

- name: Get disk byte
  shell: |
         if [[ $(fdisk -l /dev/{{raw_prefix}}{{item}} |  grep '/dev/{{raw_prefix}}{{item}}{{partition}}' | wc -l) = 0 ]]; then fdisk -l /dev/{{raw_prefix}}{{item}} | grep 'Disk /dev' | awk '{print $4}'; fi || true
  register: y
  with_items: "{{letters}}"

- name: Print header
  shell: |
         echo "{{inventory_hostname}}" >> {{pre_check_logs}}
         echo "" >> {{pre_check_logs}}
    
- name: Save to log
  shell: |
         echo "    disk={{raw_prefix}}{{x.results[item].item}} size={{x.results[item].stdout}} {{y.results[item].stdout | replace(',','')}}" >> {{pre_check_logs}}
  when: x.results[item].stdout|int>=1 and x.results[item].stdout is defined
  with_items: '{{numbers}}'

- name: Show to ansible log
  debug:
    msg: 
      - "    disk={{raw_prefix}}{{x.results[item].item}} size={{x.results[item].stdout}} {{y.results[item].stdout | replace(',','')}}"  
  when: x.results[item].stdout|int>=1 and x.results[item].stdout is defined
  with_items: '{{numbers}}'
      
